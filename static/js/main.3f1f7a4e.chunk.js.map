{"version":3,"sources":["components/Student.jsx","components/Loading.jsx","components/Main.jsx","config/apiEndpoint.js","App.js","serviceWorker.js","index.js"],"names":["Student","result","inputId","tagSearchQuery","useState","button","setButton","details","setDetails","tags","setTags","searching","setSearching","match","setMatch","useEffect","toString","toLocaleLowerCase","includes","toLowerCase","className","src","pic","alt","firstName","toUpperCase","lastName","id","onClick","aria-hidden","email","company","skill","_","mean","grades","map","ea","toFixed","g","idx","key","tag","i","e","myTags","innerText","currentTarget","parentNode","console","log","res","pull","handleDelete","onSubmit","preventDefault","input","document","getElementById","text","value","push","handleTags","pattern","type","placeholder","Loading","loading","size","color","Main","setResult","searchQuery","setSearchQuery","setTagSearchQuery","setLoading","setTimeout","axios","get","then","data","students","catch","err","onChange","target","filter","concat","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.3f1f7a4e.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport _ from 'lodash';\r\n\r\nconst Student = ({result, inputId, tagSearchQuery}) => {\r\n\r\n  const [button, setButton] = useState(\"fa fa-plus\");\r\n  const [details, setDetails] = useState(false);\r\n  const [tags, setTags] = useState([]);\r\n  const [searching, setSearching] = useState(false);\r\n  const [match, setMatch] = useState(false);\r\n\r\n  useEffect(()=>{\r\n    if(tagSearchQuery && tags.toString().toLocaleLowerCase()\r\n    .includes(tagSearchQuery.toString().toLowerCase())) {\r\n      setSearching(true);\r\n      setMatch(true);\r\n    }\r\n    if(tagSearchQuery && !tags.toString().toLocaleLowerCase()\r\n    .includes(tagSearchQuery.toString().toLowerCase())) {\r\n      setSearching(true);\r\n      setMatch(false);\r\n    }\r\n    if(!tagSearchQuery) {\r\n      setSearching(false);\r\n      setMatch(false);\r\n    }\r\n  }, [tagSearchQuery, tags]);\r\n\r\n  const handleClick = () => {\r\n    button === \"fa fa-plus\" ? setButton('fa fa-minus') : setButton('fa fa-plus');\r\n    !details ? setDetails(true) : setDetails(false);\r\n  };\r\n\r\n  const handleTags = (e) => {\r\n    e.preventDefault();\r\n    let input = document.getElementById(`${inputId}`);\r\n    let text = document.getElementById(`${inputId}`).value;\r\n    const myTags = [...tags];\r\n    if(text) {\r\n      myTags.push(text);\r\n      setTags(myTags);\r\n      input.value = '';\r\n    }\r\n    input.value = '';\r\n  };\r\n\r\n  const handleDelete = (e) => {\r\n    const myTags = [...tags];\r\n    const innerText = e.currentTarget.parentNode.innerText;\r\n    console.log(\"mytags\", myTags);\r\n    console.log(\"innertext\", innerText);\r\n    if(myTags.includes(innerText)) {\r\n      const res = _.pull(myTags, innerText);\r\n      setTags(res);\r\n    }\r\n  };\r\n\r\n  if(searching && !match) return null;\r\n  if((searching && match)||(!searching && !match)) {\r\n  return (\r\n    <div className=\"studentContainer\">\r\n      <div className=\"imageContainer pt-3\">\r\n        <img src={result.pic} alt=\"img\" className=\"rounded-circle studentImage\"/>\r\n      </div>\r\n      <div className=\"col mainCol\">\r\n\r\n        <div className=\"title\">\r\n          <h1>{`${result.firstName.toUpperCase()} ${result.lastName.toUpperCase()}`}</h1>\r\n          <button id=\"expand-btn\" className=\"myButton\" onClick={handleClick}>\r\n          <span className=\"icon\"><i className={`${button} fa-2x`} aria-hidden=\"true\"></i></span></button>\r\n        </div>\r\n\r\n        <div className=\"details\">\r\n          <p>{`Email: ${result.email}`}</p>\r\n          <p>{`Company: ${result.company}`}</p>\r\n          <p>{`Skill: ${result.skill}`}</p>\r\n\r\n          <p className=\"mb-3\">{`Average: ${_.mean(result.grades.map(ea => +ea)).toFixed(2)}%`}</p>\r\n\r\n          {details && result.grades.map((g, idx) =>\r\n          <p key={idx}>{`Test: ${g}%`}</p>)}\r\n\r\n          {details ? tags.map((tag, i)=> <p className=\"myBadge mt-2 mr-2 px-2 py-1\" key={i}>{tag}\r\n          <span onClick={(e) => handleDelete(e)} className=\"deleteBtn ml-2\"><i className=\"fa fa-plus tagIcon\" aria-hidden=\"true\"></i></span></p>):''}\r\n\r\n          {details ?\r\n          <form onSubmit={(e)=> handleTags(e)}>\r\n            <input pattern=\"^[^\\s].+[^\\s]$\" id={inputId} type=\"text\" className=\"myTagInput\" placeholder=\"Add a tag\"/>\r\n          </form>\r\n          :''}\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );}\r\n};\r\nexport default Student;","import React from 'react';\r\nimport PuffLoader from \"react-spinners/PuffLoader\";\r\n\r\nconst Loading = ({loading}) => {\r\n  return (\r\n    <div className=\"messageLoaderWrapper mt-5\">\r\n      <PuffLoader size={250} color={\"#000000\"} loading={loading}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport API_ENDPOINT from '../config/apiEndpoint';\r\nimport Student from './Student';\r\nimport Loading from './Loading';\r\n\r\nconst Main = () => {\r\n\r\n  let inputId = 1;\r\n\r\n  const [result, setResult] = useState(\"\");\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [tagSearchQuery, setTagSearchQuery] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(()=> {\r\n    setLoading(true);\r\n    setTimeout(() => {\r\n    axios.get(API_ENDPOINT)\r\n    .then(res => {\r\n      setResult(res.data.students)})\r\n      .catch(err => console.log(err))\r\n      setLoading(false);\r\n    }, 1500);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"mainContainer\">\r\n\r\n      <input id=\"name-input\" type=\"text\" className=\"myInput\" placeholder=\"Search by name\"\r\n      onChange={(e)=>{setSearchQuery(e.target.value)}}/>\r\n      <input id=\"tag-input\" type=\"text\" className=\"myInput\" placeholder=\"Search by tag\"\r\n      onChange={(e)=>{setTagSearchQuery(e.target.value)}}/>\r\n\r\n      <div className=\"studentList\">\r\n\r\n        {loading ? <Loading loading={loading}/> :\r\n        result && result.filter(res => res.firstName.concat(res.lastName).toLowerCase()\r\n        .includes(searchQuery.toLocaleLowerCase()))\r\n        .map(res => <Student key={res.id} result={res} inputId={inputId++} tagSearchQuery={tagSearchQuery}/>)}\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Main;","const API_ENDPOINT = 'https://www.hatchways.io/api/assessment/students';\r\n\r\nexport default API_ENDPOINT;","import React from 'react';\nimport './App.css';\n\nimport Main from './components/Main';\nimport './CSS/main.css';\n\nfunction App() {\n  return (\n    <div className=\"container-fluid App appContainer\">\n      <Main/>\n    </div>\n  );\n};\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}